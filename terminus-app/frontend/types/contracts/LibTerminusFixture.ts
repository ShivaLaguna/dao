/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { ContractOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import {
  Callback,
  PayableTransactionObject,
  NonPayableTransactionObject,
  BlockType,
  ContractEventLog,
  BaseContract,
} from "./types";

export interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export type ControlTransferred = ContractEventLog<{
  previousController: string;
  newController: string;
  0: string;
  1: string;
}>;
export type PoolControlTransferred = ContractEventLog<{
  poolID: string;
  previousController: string;
  newController: string;
  0: string;
  1: string;
  2: string;
}>;

export interface LibTerminusFixture extends BaseContract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  ): LibTerminusFixture;
  clone(): LibTerminusFixture;
  methods: {};
  events: {
    ControlTransferred(cb?: Callback<ControlTransferred>): EventEmitter;
    ControlTransferred(
      options?: EventOptions,
      cb?: Callback<ControlTransferred>
    ): EventEmitter;

    PoolControlTransferred(cb?: Callback<PoolControlTransferred>): EventEmitter;
    PoolControlTransferred(
      options?: EventOptions,
      cb?: Callback<PoolControlTransferred>
    ): EventEmitter;

    allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter;
  };

  once(event: "ControlTransferred", cb: Callback<ControlTransferred>): void;
  once(
    event: "ControlTransferred",
    options: EventOptions,
    cb: Callback<ControlTransferred>
  ): void;

  once(
    event: "PoolControlTransferred",
    cb: Callback<PoolControlTransferred>
  ): void;
  once(
    event: "PoolControlTransferred",
    options: EventOptions,
    cb: Callback<PoolControlTransferred>
  ): void;
}
